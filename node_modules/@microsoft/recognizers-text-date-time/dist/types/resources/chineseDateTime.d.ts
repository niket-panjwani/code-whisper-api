export declare namespace ChineseDateTime {
    const LangMarker = "Chi";
    const MonthRegex = "(?<month>\u6B63\u6708|\u4E00\u6708|\u4E8C\u6708|\u4E09\u6708|\u56DB\u6708|\u4E94\u6708|\u516D\u6708|\u4E03\u6708|\u516B\u6708|\u4E5D\u6708|\u5341\u6708|\u5341\u4E00\u6708|\u5341\u4E8C\u6708|01\u6708|02\u6708|03\u6708|04\u6708|05\u6708|06\u6708|07\u6708|08\u6708|09\u6708|10\u6708|11\u6708|12\u6708|1\u6708|2\u6708|3\u6708|4\u6708|5\u6708|6\u6708|7\u6708|8\u6708|9\u6708|\u5927\u5E74(?!\u9F84|\u7EAA|\u7EA7))";
    const DayRegex = "(?<day>01|02|03|04|05|06|07|08|09|10|11|12|13|14|15|16|17|18|19|20|21|22|23|24|25|26|27|28|29|30|31|1|2|3|4|5|6|7|8|9)";
    const OneToNineIntegerRegex = "[\u4E00\u4E8C\u4E09\u56DB\u4E94\u516D\u4E03\u516B\u4E5D\u58F9\u8D30\u53C1\u8086\u4F0D\u9646\u67D2\u634C\u7396]";
    const DateDayRegexInCJK: string;
    const DayRegexNumInCJK: string;
    const MonthNumRegex = "(?<month>01|02|03|04|05|06|07|08|09|10|11|12|1|2|3|4|5|6|7|8|9)";
    const TwoNumYear = "50";
    const YearNumRegex = "(?<year>((1[5-9]|20)\\d{2})|2100)";
    const SimpleYearRegex = "(?<year>(\\d{2,4}))";
    const ZeroToNineIntegerRegexCJK = "[\u4E00\u4E8C\u4E09\u56DB\u4E94\u516D\u4E03\u516B\u4E5D\u96F6\u58F9\u8D30\u53C1\u8086\u4F0D\u9646\u67D2\u634C\u7396\u3007\u4E24\u5343\u4FE9\u5006\u4EE8]";
    const DynastyStartYear = "\u5143";
    const RegionTitleRegex = "(\u8D1E\u89C2|\u5F00\u5143|\u795E\u9F99|\u6D2A\u6B66|\u5EFA\u6587|\u6C38\u4E50|\u666F\u6CF0|\u5929\u987A|\u6210\u5316|\u5609\u9756|\u4E07\u5386|\u5D07\u796F|\u987A\u6CBB|\u5EB7\u7199|\u96CD\u6B63|\u4E7E\u9686|\u5609\u5E86|\u9053\u5149|\u54B8\u4E30|\u540C\u6CBB|\u5149\u7EEA|\u5BA3\u7EDF|\u6C11\u56FD)";
    const DynastyYearRegex: string;
    const DateYearInCJKRegex: string;
    const WeekDayRegex = "(?<weekday>\u5468\u65E5|\u5468\u5929|\u5468\u4E00|\u5468\u4E8C|\u5468\u4E09|\u5468\u56DB|\u5468\u4E94|\u5468\u516D|\u661F\u671F\u4E00|\u661F\u671F\u4E8C|\u661F\u671F\u4E09|\u661F\u671F\u56DB|\u661F\u671F\u4E94|\u661F\u671F\u516D|\u661F\u671F\u65E5|\u661F\u671F\u5929|\u793C\u62DC\u4E00|\u793C\u62DC\u4E8C|\u793C\u62DC\u4E09|\u793C\u62DC\u56DB|\u793C\u62DC\u4E94|\u793C\u62DC\u516D|\u793C\u62DC\u65E5|\u793C\u62DC\u5929|\u79AE\u62DC\u4E00|\u79AE\u62DC\u4E8C|\u79AE\u62DC\u4E09|\u79AE\u62DC\u56DB|\u79AE\u62DC\u4E94|\u79AE\u62DC\u516D|\u79AE\u62DC\u65E5|\u79AE\u62DC\u5929|\u9031\u65E5|\u9031\u5929|\u9031\u4E00|\u9031\u4E8C|\u9031\u4E09|\u9031\u56DB|\u9031\u4E94|\u9031\u516D)";
    const WeekDayStartEnd = "^[.]";
    const LunarRegex = "(\u519C\u5386|\u521D\u4E00|\u6B63\u6708|\u5927\u5E74(?!\u9F84|\u7EAA|\u7EA7))";
    const DateThisRegex: string;
    const DateLastRegex: string;
    const DateNextRegex: string;
    const WeekWithWeekDayRangeRegex = "^[.]";
    const WoMLastRegex = "\u6700\u540E\u4E00";
    const WoMPreviousRegex = "\u4E0A\u4E2A";
    const WoMNextRegex = "\u4E0B\u4E2A";
    const SpecialMonthRegex = "^[.]";
    const SpecialYearRegex = "^[.]";
    const MonthDayRange = "^[.]";
    const SpecialDayRegex = "(\u6700\u8FD1|\u524D\u5929|\u540E\u5929|\u6628\u5929|\u660E\u5929|\u4ECA\u5929|\u4ECA\u65E5|\u660E\u65E5|\u6628\u65E5|\u5927\u540E\u5929|\u5927\u524D\u5929|\u5F8C\u5929|\u5927\u5F8C\u5929)";
    const SpecialDayWithNumRegex = "^[.]";
    const WeekDayOfMonthRegex: string;
    const WeekDayAndDayRegex = "^[.]";
    const ThisPrefixRegex = "\u8FD9\u4E2A|\u8FD9\u4E00\u4E2A|\u8FD9|\u8FD9\u4E00|\u672C|\u4ECA";
    const LastPrefixRegex = "\u4E0A\u4E2A|\u4E0A\u4E00\u4E2A|\u4E0A|\u4E0A\u4E00|\u53BB";
    const NextPrefixRegex = "\u4E0B\u4E2A|\u4E0B\u4E00\u4E2A|\u4E0B|\u4E0B\u4E00|\u660E";
    const RelativeRegex: string;
    const SpecialDate: string;
    const DateUnitRegex = "(?<unit>\u5E74|\u4E2A\u6708|\u5468|\u9031|\u65E5|\u5929)";
    const BeforeRegex = "\u4EE5\u524D|\u4E4B\u524D|\u524D";
    const AfterRegex = "\u4EE5\u540E|\u4EE5\u5F8C|\u4E4B\u540E|\u4E4B\u5F8C|\u540E|\u5F8C|\u8FD8\u5269";
    const TimePeriodLeftRegex = "\u8FD8\u5269";
    const DateRegexList1: string;
    const DateRegexList2: string;
    const DateRegexList3: string;
    const DateRegexList4: string;
    const DateRegexList5: string;
    const DateRegexList6: string;
    const DateRegexList7: string;
    const DateRegexList8: string;
    const DatePeriodTillRegex = "(?<till>\u5230|\u81F3|--|-|\u2014|\u2014\u2014|~|\u2013)";
    const DatePeriodRangeSuffixRegex = "^\\b$";
    const DatePeriodRangePrefixRegex = "\u4ECE";
    const DatePeriodTillSuffixRequiredRegex = "(?<till>\u4E0E|\u548C)";
    const DatePeriodDayRegexInCJK = "(?<day>\u521D\u4E00|\u4E09\u5341|\u4E00\u65E5|\u5341\u4E00\u65E5|\u4E8C\u5341\u4E00\u65E5|\u4E09\u5341\u4E00\u65E5|\u4E8C\u65E5|\u4E09\u65E5|\u56DB\u65E5|\u4E94\u65E5|\u516D\u65E5|\u4E03\u65E5|\u516B\u65E5|\u4E5D\u65E5|\u5341\u4E8C\u65E5|\u5341\u4E09\u65E5|\u5341\u56DB\u65E5|\u5341\u4E94\u65E5|\u5341\u516D\u65E5|\u5341\u4E03\u65E5|\u5341\u516B\u65E5|\u5341\u4E5D\u65E5|\u4E8C\u5341\u4E8C\u65E5|\u4E8C\u5341\u4E09\u65E5|\u4E8C\u5341\u56DB\u65E5|\u4E8C\u5341\u4E94\u65E5|\u4E8C\u5341\u516D\u65E5|\u4E8C\u5341\u4E03\u65E5|\u4E8C\u5341\u516B\u65E5|\u4E8C\u5341\u4E5D\u65E5|\u4E00\u65E5|\u5341\u4E00\u65E5|\u5341\u65E5|\u4E8C\u5341\u4E00\u65E5|\u4E8C\u5341\u65E5|\u4E09\u5341\u4E00\u65E5|\u4E09\u5341\u65E5|\u4E8C\u65E5|\u4E09\u65E5|\u56DB\u65E5|\u4E94\u65E5|\u516D\u65E5|\u4E03\u65E5|\u516B\u65E5|\u4E5D\u65E5|\u5341\u4E8C\u65E5|\u5341\u4E09\u65E5|\u5341\u56DB\u65E5|\u5341\u4E94\u65E5|\u5341\u516D\u65E5|\u5341\u4E03\u65E5|\u5341\u516B\u65E5|\u5341\u4E5D\u65E5|\u4E8C\u5341\u4E8C\u65E5|\u4E8C\u5341\u4E09\u65E5|\u4E8C\u5341\u56DB\u65E5|\u4E8C\u5341\u4E94\u65E5|\u4E8C\u5341\u516D\u65E5|\u4E8C\u5341\u4E03\u65E5|\u4E8C\u5341\u516B\u65E5|\u4E8C\u5341\u4E5D\u65E5|\u5341\u65E5|\u4E8C\u5341\u65E5|\u4E09\u5341\u65E5|10\u65E5|11\u65E5|12\u65E5|13\u65E5|14\u65E5|15\u65E5|16\u65E5|17\u65E5|18\u65E5|19\u65E5|1\u65E5|20\u65E5|21\u65E5|22\u65E5|23\u65E5|24\u65E5|25\u65E5|26\u65E5|27\u65E5|28\u65E5|29\u65E5|2\u65E5|30\u65E5|31\u65E5|3\u65E5|4\u65E5|5\u65E5|6\u65E5|7\u65E5|8\u65E5|9\u65E5|\u4E00\u53F7|\u5341\u4E00\u53F7|\u4E8C\u5341\u4E00\u53F7|\u4E09\u5341\u4E00\u53F7|\u4E8C\u53F7|\u4E09\u53F7|\u56DB\u53F7|\u4E94\u53F7|\u516D\u53F7|\u4E03\u53F7|\u516B\u53F7|\u4E5D\u53F7|\u5341\u4E8C\u53F7|\u5341\u4E09\u53F7|\u5341\u56DB\u53F7|\u5341\u4E94\u53F7|\u5341\u516D\u53F7|\u5341\u4E03\u53F7|\u5341\u516B\u53F7|\u5341\u4E5D\u53F7|\u4E8C\u5341\u4E8C\u53F7|\u4E8C\u5341\u4E09\u53F7|\u4E8C\u5341\u56DB\u53F7|\u4E8C\u5341\u4E94\u53F7|\u4E8C\u5341\u516D\u53F7|\u4E8C\u5341\u4E03\u53F7|\u4E8C\u5341\u516B\u53F7|\u4E8C\u5341\u4E5D\u53F7|\u4E00\u53F7|\u5341\u4E00\u53F7|\u5341\u53F7|\u4E8C\u5341\u4E00\u53F7|\u4E8C\u5341\u53F7|\u4E09\u5341\u4E00\u53F7|\u4E09\u5341\u53F7|\u4E8C\u53F7|\u4E09\u53F7|\u56DB\u53F7|\u4E94\u53F7|\u516D\u53F7|\u4E03\u53F7|\u516B\u53F7|\u4E5D\u53F7|\u5341\u4E8C\u53F7|\u5341\u4E09\u53F7|\u5341\u56DB\u53F7|\u5341\u4E94\u53F7|\u5341\u516D\u53F7|\u5341\u4E03\u53F7|\u5341\u516B\u53F7|\u5341\u4E5D\u53F7|\u4E8C\u5341\u4E8C\u53F7|\u4E8C\u5341\u4E09\u53F7|\u4E8C\u5341\u56DB\u53F7|\u4E8C\u5341\u4E94\u53F7|\u4E8C\u5341\u516D\u53F7|\u4E8C\u5341\u4E03\u53F7|\u4E8C\u5341\u516B\u53F7|\u4E8C\u5341\u4E5D\u53F7|\u5341\u53F7|\u4E8C\u5341\u53F7|\u4E09\u5341\u53F7|10\u53F7|11\u53F7|12\u53F7|13\u53F7|14\u53F7|15\u53F7|16\u53F7|17\u53F7|18\u53F7|19\u53F7|1\u53F7|20\u53F7|21\u53F7|22\u53F7|23\u53F7|24\u53F7|25\u53F7|26\u53F7|27\u53F7|28\u53F7|29\u53F7|2\u53F7|30\u53F7|31\u53F7|3\u53F7|4\u53F7|5\u53F7|6\u53F7|7\u53F7|8\u53F7|9\u53F7|\u4E00|\u5341\u4E00|\u4E8C\u5341\u4E00|\u4E09\u5341\u4E00|\u4E8C|\u4E09|\u56DB|\u4E94|\u516D|\u4E03|\u516B|\u4E5D|\u5341\u4E8C|\u5341\u4E09|\u5341\u56DB|\u5341\u4E94|\u5341\u516D|\u5341\u4E03|\u5341\u516B|\u5341\u4E5D|\u4E8C\u5341\u4E8C|\u4E8C\u5341\u4E09|\u4E8C\u5341\u56DB|\u4E8C\u5341\u4E94|\u4E8C\u5341\u516D|\u4E8C\u5341\u4E03|\u4E8C\u5341\u516B|\u4E8C\u5341\u4E5D|\u4E00|\u5341\u4E00|\u5341|\u4E8C\u5341\u4E00|\u4E8C\u5341|\u4E09\u5341\u4E00|\u4E09\u5341|\u4E8C|\u4E09|\u56DB|\u4E94|\u516D|\u4E03|\u516B|\u4E5D|\u5341\u4E8C|\u5341\u4E09|\u5341\u56DB|\u5341\u4E94|\u5341\u516D|\u5341\u4E03|\u5341\u516B|\u5341\u4E5D|\u4E8C\u5341\u4E8C|\u4E8C\u5341\u4E09|\u4E8C\u5341\u56DB|\u4E8C\u5341\u4E94|\u4E8C\u5341\u516D|\u4E8C\u5341\u4E03|\u4E8C\u5341\u516B|\u4E8C\u5341\u4E5D|\u5341|\u4E8C\u5341|\u4E09\u5341|\u5EFF|\u5345)";
    const DatePeriodThisRegex = "\u8FD9\u4E2A|\u8FD9\u4E00\u4E2A|\u8FD9|\u8FD9\u4E00|\u672C";
    const DatePeriodLastRegex = "\u4E0A\u4E2A|\u4E0A\u4E00\u4E2A|\u4E0A|\u4E0A\u4E00";
    const DatePeriodNextRegex = "\u4E0B\u4E2A|\u4E0B\u4E00\u4E2A|\u4E0B|\u4E0B\u4E00";
    const RelativeMonthRegex: string;
    const HalfYearRegex = "((?<firstHalf>(\u4E0A|\u524D)\u534A\u5E74)|(?<secondHalf>(\u4E0B|\u540E)\u534A\u5E74))";
    const YearRegex: string;
    const StrictYearRegex: string;
    const YearRegexInNumber = "(?<year>(\\d{4}))";
    const DatePeriodYearInCJKRegex: string;
    const MonthSuffixRegex: string;
    const SimpleCasesRegex: string;
    const YearAndMonth: string;
    const SimpleYearAndMonth: string;
    const PureNumYearAndMonth: string;
    const OneWordPeriodRegex: string;
    const LaterEarlyPeriodRegex = "^[.]";
    const DatePointWithAgoAndLater = "^[.]";
    const WeekOfMonthRegex: string;
    const WeekOfYearRegex: string;
    const WeekOfDateRegex = "^[.]";
    const MonthOfDateRegex = "^[.]";
    const RestOfDateRegex = "^[.]";
    const UnitRegex = "(?<unit>\u5E74|(?<uoy>(\u4E2A)?\u6708|\u5468|\u9031|\u65E5|\u5929))";
    const FollowedUnit: string;
    const NumberCombinedWithUnit: string;
    const DateRangePrepositions = "((\u4ECE|\u5728|\u81EA)\\s*)?";
    const YearToYear: string;
    const YearToYearSuffixRequired: string;
    const MonthToMonth: string;
    const MonthToMonthSuffixRequired: string;
    const DayToDay = "^[.]";
    const DayRegexForPeriod = "^[.]";
    const FirstLastOfYearRegex: string;
    const ComplexDatePeriodRegex = "^[.]";
    const PastRegex = "(?<past>(\u4E4B\u524D|\u524D|\u4E0A|\u8FD1|\u8FC7\u53BB))";
    const FutureRegex = "(?<future>(\u4E4B\u540E|\u4E4B\u5F8C|\u540E|\u5F8C|(?<![\u4E00\u4E24\u51E0]\\s*)\u4E0B|\u672A\u6765(\u7684)?))";
    const SeasonRegex = "(?<season>\u6625|\u590F|\u79CB|\u51AC)(\u5929|\u5B63)?";
    const WhichWeekRegex = "^[.]";
    const SeasonWithYear: string;
    const QuarterRegex: string;
    const CenturyNumRegex = "^[.]";
    const CenturyRegex = "(?<century>\\d|1\\d|2\\d)\u4E16\u7EAA";
    const CenturyRegexInCJK = "(?<century>\u4E00|\u4E8C|\u4E09|\u56DB|\u4E94|\u516D|\u4E03|\u516B|\u4E5D|\u5341|\u5341\u4E00|\u5341\u4E8C|\u5341\u4E09|\u5341\u56DB|\u5341\u4E94|\u5341\u516D|\u5341\u4E03|\u5341\u516B|\u5341\u4E5D|\u4E8C\u5341|\u4E8C\u5341\u4E00|\u4E8C\u5341\u4E8C)\u4E16\u7EAA";
    const RelativeCenturyRegex: string;
    const DecadeRegexInCJK = "(?<decade>\u5341|\u4E00\u5341|\u4E8C\u5341|\u4E09\u5341|\u56DB\u5341|\u4E94\u5341|\u516D\u5341|\u4E03\u5341|\u516B\u5341|\u4E5D\u5341)";
    const DecadeRegex: string;
    const PrepositionRegex = "(?<prep>^\u7684|\u5728$)";
    const NowRegex = "(?<now>\u73B0\u5728|\u9A6C\u4E0A|\u7ACB\u523B|\u521A\u521A\u624D|\u521A\u521A|\u521A\u624D|\u8FD9\u4F1A\u513F|\u5F53\u4E0B|\u6B64\u523B)";
    const NightRegex = "(?<night>\u65E9|\u665A)";
    const TimeOfSpecialDayRegex = "(\u4ECA\u665A|\u4ECA\u65E9|\u4ECA\u6668|\u660E\u665A|\u660E\u65E9|\u660E\u6668|\u6628\u665A)(\u7684|\u5728)?";
    const DateTimePeriodTillRegex = "(?<till>\u5230|\u76F4\u5230|--|-|\u2014|\u2014\u2014)";
    const DateTimePeriodPrepositionRegex = "(?<prep>^\\s*\u7684|\u5728\\s*$)";
    const BeforeAfterRegex = "^\\b$";
    const HourRegex: string;
    const HourNumRegex = "(?<hour>[\u96F6\u3007\u4E00\u4E8C\u4E24\u4E09\u56DB\u4E94\u516D\u4E03\u516B\u4E5D]|\u4E8C\u5341[\u4E00\u4E8C\u4E09\u56DB]?|\u5341[\u4E00\u4E8C\u4E09\u56DB\u4E94\u516D\u4E03\u516B\u4E5D]?)";
    const ZhijianRegex = "^\\s*(\u4E4B\u95F4|\u4E4B\u5185|\u671F\u95F4|\u4E2D\u95F4|\u95F4)";
    const DateTimePeriodThisRegex = "\u8FD9\u4E2A|\u8FD9\u4E00\u4E2A|\u8FD9|\u8FD9\u4E00";
    const DateTimePeriodLastRegex = "\u4E0A\u4E2A|\u4E0A\u4E00\u4E2A|\u4E0A|\u4E0A\u4E00";
    const DateTimePeriodNextRegex = "\u4E0B\u4E2A|\u4E0B\u4E00\u4E2A|\u4E0B|\u4E0B\u4E00";
    const AmPmDescRegex = "(?<daydesc>(am|a\\.m\\.|a m|a\\. m\\.|a\\.m|a\\. m|a m|pm|p\\.m\\.|p m|p\\. m\\.|p\\.m|p\\. m|p m|\u4E0A\u5348|\u4E2D\u5348|\u4E0B\u5348|\u5348\u540E|\u665A\u4E0A|\u591C\u91CC|\u591C\u665A|\u591C\u95F4|\u6DF1\u591C|\u508D\u665A|\u665A|\u65E9\u95F4?))";
    const TimeOfDayRegex = "(?<timeOfDay>\u51CC\u6668|\u6E05\u6668|\u65E9\u4E0A|\u65E9\u95F4|\u65E9|\u4E0A\u5348|\u4E2D\u5348|\u4E0B\u5348|\u5348\u540E|\u665A\u4E0A|\u591C\u91CC|\u591C\u665A|\u534A\u591C|\u591C\u95F4|\u6DF1\u591C|\u508D\u665A|\u665A)";
    const SpecificTimeOfDayRegex: string;
    const DateTimePeriodUnitRegex = "(\u4E2A)?(?<unit>(\u5C0F\u65F6|\u949F\u5934|\u5206\u949F|\u79D2\u949F|\u65F6|\u5206|\u79D2))";
    const DateTimePeriodFollowedUnit: string;
    const DateTimePeriodNumberCombinedWithUnit: string;
    const DurationAllRegex = "^[.]";
    const DurationHalfRegex = "^[.]";
    const DurationRelativeDurationUnitRegex = "^[.]";
    const AgoLaterRegex = "^[.]";
    const DurationDuringRegex = "^[.]";
    const DurationSomeRegex = "^[.]";
    const DurationMoreOrLessRegex = "^[.]";
    const DurationYearRegex = "((\\d{3,4})|0\\d|\u4E24\u5343)\\s*\u5E74";
    const DurationHalfSuffixRegex = "\u534A";
    const DurationSuffixList: ReadonlyMap<string, string>;
    const DurationAmbiguousUnits: string[];
    const DurationUnitRegex: string;
    const AnUnitRegex = "^[.]";
    const DurationConnectorRegex = "^\\s*(?<connector>[\u591A\u53C8\u4F59\u96F6]?)\\s*$";
    const ConnectorRegex = "^\\s*,\\s*$";
    const LunarHolidayRegex: string;
    const HolidayRegexList1: string;
    const HolidayRegexList2: string;
    const SetUnitRegex = "(?<unit>\u5E74|\u6708|\u5468|\u661F\u671F|\u65E5|\u5929|\u5C0F\u65F6|\u65F6|\u5206\u949F|\u5206|\u79D2\u949F|\u79D2)";
    const SetEachUnitRegex: string;
    const SetEachPrefixRegex = "(?<each>(\u6BCF)\\s*$)";
    const SetEachSuffixRegex = "^[.]";
    const SetLastRegex = "(?<last>last|this|next)";
    const SetEachDayRegex = "(\u6BCF|\u6BCF\u4E00)(\u5929|\u65E5)\\s*$";
    const SetEachDateUnitRegex = "^[.]";
    const TimeHourNumRegex = "(00|01|02|03|04|05|06|07|08|09|0|10|11|12|13|14|15|16|17|18|19|20|21|22|23|24|1|2|3|4|5|6|7|8|9)";
    const TimeMinuteNumRegex = "(00|01|02|03|04|05|06|07|08|09|10|11|12|13|14|15|16|17|18|19|20|21|22|23|24|25|26|27|28|29|30|31|32|33|34|35|36|37|38|39|40|41|42|43|44|45|46|47|48|49|50|51|52|53|54|55|56|57|58|59|0|1|2|3|4|5|6|7|8|9)";
    const TimeSecondNumRegex = "(00|01|02|03|04|05|06|07|08|09|10|11|12|13|14|15|16|17|18|19|20|21|22|23|24|25|26|27|28|29|30|31|32|33|34|35|36|37|38|39|40|41|42|43|44|45|46|47|48|49|50|51|52|53|54|55|56|57|58|59|0|1|2|3|4|5|6|7|8|9)";
    const TimeHourCJKRegex = "([\u96F6\u3007\u4E00\u4E8C\u4E24\u4E09\u56DB\u4E94\u516D\u4E03\u516B\u4E5D]|\u4E8C\u5341[\u4E00\u4E8C\u4E09\u56DB]?|\u5341[\u4E00\u4E8C\u4E09\u56DB\u4E94\u516D\u4E03\u516B\u4E5D]?)";
    const TimeMinuteCJKRegex = "([\u4E8C\u4E09\u56DB\u4E94]?\u5341[\u4E00\u4E8C\u4E09\u56DB\u4E94\u516D\u4E03\u516B\u4E5D]?|\u516D\u5341|[\u96F6\u3007\u4E00\u4E8C\u4E09\u56DB\u4E94\u516D\u4E03\u516B\u4E5D])";
    const TimeSecondCJKRegex: string;
    const TimeClockDescRegex = "(\u70B9\\s*\u6574|\u70B9\\s*\u949F|\u70B9|\u65F6)";
    const TimeMinuteDescRegex = "(\u5206\u949F|\u5206|)";
    const TimeSecondDescRegex = "(\u79D2\u949F|\u79D2)";
    const TimeBanHourPrefixRegex = "(\u7B2C)";
    const TimeHourRegex: string;
    const TimeMinuteRegex: string;
    const TimeSecondRegex: string;
    const TimeHalfRegex = "(?<half>\u8FC7\u534A|\u534A)";
    const TimeQuarterRegex = "(?<quarter>[\u4E00\u4E24\u4E8C\u4E09\u56DB1-4])\\s*(\u523B\u949F|\u523B)";
    const TimeCJKTimeRegex: string;
    const TimeDigitTimeRegex: string;
    const TimeDayDescRegex = "(?<daydesc>\u51CC\u6668|\u6E05\u6668|\u65E9\u4E0A|\u65E9\u95F4|\u65E9|\u4E0A\u5348|\u4E2D\u5348|\u4E0B\u5348|\u5348\u540E|\u665A\u4E0A|\u591C\u91CC|\u591C\u665A|\u534A\u591C|\u5348\u591C|\u591C\u95F4|\u6DF1\u591C|\u508D\u665A|\u665A)";
    const TimeApproximateDescPreffixRegex = "(\u5927[\u7EA6\u6982]|\u5DEE\u4E0D\u591A|\u53EF\u80FD|\u4E5F\u8BB8|\u7EA6|\u4E0D\u8D85\u8FC7|\u4E0D\u591A[\u4E8E\u8FC7]|\u6700[\u591A\u957F\u5C11]|\u5C11\u4E8E|[\u8D85\u77ED\u957F\u591A]\u8FC7|\u51E0\u4E4E\u8981|\u5C06\u8FD1|\u5DEE\u70B9|\u5FEB\u8981|\u63A5\u8FD1|\u81F3\u5C11|\u8D77\u7801|\u8D85\u51FA|\u4E0D\u5230)";
    const TimeApproximateDescSuffixRegex = "(\u5DE6\u53F3)";
    const TimeRegexes1: string;
    const TimeRegexes2: string;
    const TimeRegexes3: string;
    const TimePeriodTimePeriodConnectWords = "(\u8D77|\u81F3|\u5230|\u2013|-|\u2014|~|\uFF5E)";
    const TimePeriodLeftCJKTimeRegex: string;
    const TimePeriodRightCJKTimeRegex: string;
    const TimePeriodLeftDigitTimeRegex: string;
    const TimePeriodRightDigitTimeRegex: string;
    const TimePeriodShortLeftCJKTimeRegex: string;
    const TimePeriodShortLeftDigitTimeRegex: string;
    const TimePeriodRegexes1: string;
    const TimePeriodRegexes2: string;
    const FromToRegex = "(\u4ECE|\u81EA).+([\u81F3\u5230]).+";
    const AmbiguousRangeModifierPrefix = "(\u4ECE|\u81EA)";
    const ReferenceDatePeriodRegex = "^[.]";
    const UnspecificDatePeriodRegex = "^[.]";
    const ParserConfigurationBefore = "((?<include>\u548C|\u6216|\u53CA)?(\u4E4B\u524D|\u4EE5\u524D)|\u524D)";
    const ParserConfigurationAfter = "((?<include>\u548C|\u6216|\u53CA)?(\u4E4B\u540E|\u4E4B\u5F8C|\u4EE5\u540E|\u4EE5\u5F8C)|\u540E|\u5F8C)";
    const ParserConfigurationUntil = "(\u76F4\u5230|\u76F4\u81F3|\u622A\u81F3|\u622A\u6B62(\u5230)?)";
    const ParserConfigurationSincePrefix = "(\u81EA\u4ECE|\u81EA|\u81EA\u6253|\u6253|\u4ECE)";
    const ParserConfigurationSinceSuffix = "(\u4EE5\u6765|\u5F00\u59CB|\u8D77)";
    const ParserConfigurationAroundPrefix = "^[.]";
    const ParserConfigurationAroundSuffix = "^[.]";
    const ParserConfigurationLastWeekDayRegex = "\u6700\u540E\u4E00\u4E2A";
    const ParserConfigurationNextMonthRegex = "\u4E0B\u4E00\u4E2A";
    const ParserConfigurationLastMonthRegex = "\u4E0A\u4E00\u4E2A";
    const ParserConfigurationDatePrefix = " ";
    const ParserConfigurationUnitMap: ReadonlyMap<string, string>;
    const ParserConfigurationUnitValueMap: ReadonlyMap<string, number>;
    const MonthTerms: string[];
    const WeekendTerms: string[];
    const WeekTerms: string[];
    const YearTerms: string[];
    const ThisYearTerms: string[];
    const YearToDateTerms: string[];
    const LastYearTerms: string[];
    const NextYearTerms: string[];
    const YearAfterNextTerms: string[];
    const YearBeforeLastTerms: string[];
    const ParserConfigurationSeasonMap: ReadonlyMap<string, string>;
    const ParserConfigurationSeasonValueMap: ReadonlyMap<string, number>;
    const ParserConfigurationCardinalMap: ReadonlyMap<string, number>;
    const ParserConfigurationDayOfMonth: ReadonlyMap<string, number>;
    const ParserConfigurationDayOfWeek: ReadonlyMap<string, number>;
    const ParserConfigurationMonthOfYear: ReadonlyMap<string, number>;
    const DateTimeSimpleAmRegex = "(?<am>\u65E9|\u6668)";
    const DateTimeSimplePmRegex = "(?<pm>\u665A)";
    const DateTimePeriodMORegex = "(\u51CC\u6668|\u6E05\u6668|\u65E9\u4E0A|\u65E9\u95F4|\u65E9|\u4E0A\u5348)";
    const DateTimePeriodMIRegex = "(\u4E2D\u5348)";
    const DateTimePeriodAFRegex = "(\u4E0B\u5348|\u5348\u540E|\u508D\u665A)";
    const DateTimePeriodEVRegex = "(\u665A\u4E0A|\u591C\u91CC|\u591C\u665A|\u665A)";
    const DateTimePeriodNIRegex = "(\u534A\u591C|\u591C\u95F4|\u6DF1\u591C)";
    const AmbiguityTimeFiltersDict: ReadonlyMap<string, string>;
    const AmbiguityTimePeriodFiltersDict: ReadonlyMap<string, string>;
    const AmbiguityDateFiltersDict: ReadonlyMap<string, string>;
    const AmbiguityDateTimeFiltersDict: ReadonlyMap<string, string>;
    const AmbiguityFiltersDict: ReadonlyMap<string, string>;
    const DurationUnitValueMap: ReadonlyMap<string, number>;
    const HolidayNoFixedTimex: ReadonlyMap<string, string>;
    const MergedBeforeRegex = "(\u524D|\u4E4B\u524D)$";
    const MergedAfterRegex = "(\u540E|\u5F8C|\u4E4B\u540E|\u4E4B\u5F8C)$";
    const TimeNumberDictionary: ReadonlyMap<string, number>;
    const TimeLowBoundDesc: ReadonlyMap<string, number>;
    const DefaultLanguageFallback = "YMD";
    const MorningTermList: string[];
    const MidDayTermList: string[];
    const AfternoonTermList: string[];
    const EveningTermList: string[];
    const DaytimeTermList: string[];
    const NightTermList: string[];
    const DynastyYearMap: ReadonlyMap<string, number>;
}
